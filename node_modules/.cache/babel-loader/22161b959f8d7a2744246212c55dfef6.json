{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/user/projects/todo-list-react/src/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //, { useState }\n\nfunction Notes(props) {\n  _s();\n\n  const [states, setStates] = useState(todoList);\n\n  function crossOut(event) {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    const index = todoList.findIndex(el => el.id === event.target.id);\n    todoList[index].check = !todoList[index].check;\n    localStorage.setItem('todo', JSON.stringify(todoList));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      className: `checkbox ${props.check ? 'checked' : ''}`,\n      id: `chk${props.x}`,\n      name: \"chkdemo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      onClick: crossOut,\n      className: \"check\",\n      id: props.id,\n      htmlFor: `chk${props.x}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text\",\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"button delete-button fa fa-times\",\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Notes, \"Uz0JhGtQB0Tpl8tHZQyIbIYepmo=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/home/user/projects/todo-list-react/src/Notes.js"],"names":["React","Notes","props","states","setStates","useState","todoList","crossOut","event","JSON","parse","localStorage","getItem","index","findIndex","el","id","target","check","setItem","stringify","x","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAE3B,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAElB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAACC,QAAD,CAApC;;AAEA,WAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAIF,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAf;AACA,UAAMC,KAAK,GAAGP,QAAQ,CAACQ,SAAT,CAAmBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUR,KAAK,CAACS,MAAN,CAAaD,EAAhD,CAAd;AACAV,IAAAA,QAAQ,CAACO,KAAD,CAAR,CAAgBK,KAAhB,GAAwB,CAACZ,QAAQ,CAACO,KAAD,CAAR,CAAgBK,KAAzC;AACAP,IAAAA,YAAY,CAACQ,OAAb,CAAqB,MAArB,EAA6BV,IAAI,CAACW,SAAL,CAAed,QAAf,CAA7B;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAG,YAAWJ,KAAK,CAACgB,KAAN,GAAc,SAAd,GAA0B,EAAG,EAA3E;AAA8E,MAAA,EAAE,EAAG,MAAKhB,KAAK,CAACmB,CAAE,EAAhG;AAAmG,MAAA,IAAI,EAAC;AAAxG;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,OAAO,EAAEd,QAAhB;AAA0B,MAAA,SAAS,EAAC,OAApC;AAA4C,MAAA,EAAE,EAAEL,KAAK,CAACc,EAAtD;AAA0D,MAAA,OAAO,EAAG,MAAKd,KAAK,CAACmB,CAAE;AAAjF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAA,gBAAyBnB,KAAK,CAACoB;AAA/B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAG,MAAA,SAAS,EAAC,kCAAb;AAAgD,qBAAY;AAA5D;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAnBQrB,K;;KAAAA,K;AAqBT,eAAeA,KAAf","sourcesContent":["import React from 'react'; //, { useState }\n\nfunction Notes(props) {\n\n    const [states, setStates] = useState(todoList);\n\n    function crossOut(event) {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        const index = todoList.findIndex(el => el.id === event.target.id);\n        todoList[index].check = !todoList[index].check;\n        localStorage.setItem('todo', JSON.stringify(todoList));\n    }\n\n    return (\n        <div className=\"notes-container\">\n            <input type=\"checkbox\" className={`checkbox ${props.check ? 'checked' : ''}`} id={`chk${props.x}`} name=\"chkdemo\"></input>\n            <label onClick={crossOut} className=\"check\" id={props.id} htmlFor={`chk${props.x}`}></label>\n            <label className=\"text\">{props.text}</label>\n            <i className=\"button delete-button fa fa-times\" aria-hidden=\"true\" ></i>\n        </div>\n    );\n}\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}