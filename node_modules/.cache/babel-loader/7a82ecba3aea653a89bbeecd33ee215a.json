{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/user/projects/todo-list-react/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Note from './Note.js';\nimport ButtonContainer from './ButtonContainer.js';\n\nfunction Form() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [filter, setFilter] = useState('');\n\n  const filterNotes = el => {\n    if (el == 'all') {\n      let todoList = JSON.parse(localStorage.getItem('todo'));\n      setNotes(todoList);\n    } else if (el == 'active') {\n      let todoList = JSON.parse(localStorage.getItem('todo'));\n      let activeNotes = todoList.filter(el => {\n        return el.check === false;\n      });\n      setNotes(activeNotes);\n    } else if (el == 'completed') {\n      let todoList = JSON.parse(localStorage.getItem('todo'));\n      let completedNotes = todoList.filter(el => {\n        return el.check === true;\n      });\n      setNotes(completedNotes);\n    }\n  };\n\n  const getTodos = () => {\n    try {\n      if (localStorage.getItem('todo')) {\n        setNotes(JSON.parse(localStorage.getItem('todo')));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n  useEffect(() => {\n    filterNotes(filter);\n  });\n\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n\n    if (inputValue.trim().length > 0) {\n      let todoList = [...notes];\n      let allNotes = {\n        text: inputValue,\n        check: false,\n        id: Math.ceil(Math.random() * 10000)\n      };\n      let i = todoList.length;\n      todoList[i] = allNotes;\n      localStorage.setItem('todo', JSON.stringify(todoList));\n      setNotes(todoList);\n      setInputValue('');\n    }\n  };\n\n  const onCheckChange = id => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    const index = todoList.findIndex(el => el.id == id);\n    todoList[index].check = !todoList[index].check;\n    localStorage.setItem('todo', JSON.stringify(todoList));\n    setNotes(todoList);\n  };\n\n  const onDelete = id => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    const index = todoList.findIndex(el => el.id == id);\n    todoList.splice(index, 1);\n    localStorage.setItem('todo', JSON.stringify(todoList));\n    setNotes(todoList);\n  };\n\n  const onDeleteAll = e => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    todoList = todoList.filter(el => {\n      return el.check === false;\n    });\n    localStorage.setItem('todo', JSON.stringify(todoList));\n    setNotes(todoList);\n  };\n\n  const crossOutAllNotes = () => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    todoList.map(obj => {\n      return obj.check = true;\n    });\n    localStorage.setItem('todo', JSON.stringify(todoList));\n    setNotes(todoList);\n  };\n  /*------------------------*/\n\n\n  const onAllNotes = () => {\n    setFilter('all');\n    /*let todoList = JSON.parse(localStorage.getItem('todo'));\n    setNotes(todoList);*/\n  };\n\n  const onActiveNotes = () => {\n    setFilter('active');\n    /* let todoList = JSON.parse(localStorage.getItem('todo'));\n     let activeNotes = todoList.filter((el) => {\n         return el.check === false;\n     });\n     setNotes(activeNotes); */\n  };\n\n  const onCompletedNotes = () => {\n    setFilter('completed');\n    /*  let todoList = JSON.parse(localStorage.getItem('todo'));\n      let completedNotes = todoList.filter((el) => {\n          return el.check === true;\n      });\n      setNotes(completedNotes); */\n  };\n  /*---------------------------------*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-angle-down\",\n          onClick: crossOutAllNotes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          placeholder: \"What needs to be done?\",\n          onChange: handleChange,\n          value: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button add-button\",\n          onClick: addNote,\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-notes all-notes\",\n        children: notes && notes.map((item, i) => /*#__PURE__*/_jsxDEV(Note, {\n          check: item.check,\n          x: i,\n          id: item.id,\n          text: item.text,\n          onChange: onCheckChange,\n          onClick: onDelete\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      all: onAllNotes,\n      active: onActiveNotes,\n      completed: onCompletedNotes,\n      clearComplered: onDeleteAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"anBU1uGAhkxeWl4GENlcYyltUi4=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/user/projects/todo-list-react/src/Form.js"],"names":["React","useState","useEffect","Note","ButtonContainer","Form","notes","setNotes","inputValue","setInputValue","filter","setFilter","filterNotes","el","todoList","JSON","parse","localStorage","getItem","activeNotes","check","completedNotes","getTodos","err","console","log","handleChange","event","target","value","addNote","preventDefault","trim","length","allNotes","text","id","Math","ceil","random","i","setItem","stringify","onCheckChange","index","findIndex","onDelete","splice","onDeleteAll","e","crossOutAllNotes","map","obj","onAllNotes","onActiveNotes","onCompletedNotes","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Note from './Note.js';\nimport ButtonContainer from './ButtonContainer.js'\n\n\n\nfunction Form() {\n\n\n    const [notes, setNotes] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n\n    const [filter, setFilter] = useState('');\n\n\n    const filterNotes = (el) => {\n        if (el == 'all') {\n            let todoList = JSON.parse(localStorage.getItem('todo'));\n            setNotes(todoList);\n        }\n        else if (el == 'active') {\n            let todoList = JSON.parse(localStorage.getItem('todo'));\n            let activeNotes = todoList.filter((el) => {\n                return el.check === false;\n            });\n            setNotes(activeNotes);\n    \n        }\n        else if (el == 'completed') {\n            let todoList = JSON.parse(localStorage.getItem('todo'));\n            let completedNotes = todoList.filter((el) => {\n                return el.check === true;\n            });\n            setNotes(completedNotes);\n        } \n    }\n\n\n    const getTodos = () => {\n        try {\n            if (localStorage.getItem('todo')) {\n                setNotes(JSON.parse(localStorage.getItem('todo')));\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        getTodos();\n    }, []);\n    useEffect(() => {\n        filterNotes(filter);\n    });\n\n\n\n    const handleChange = (event) => {\n        setInputValue(event.target.value);\n    }\n\n    const addNote = (event) => {\n        event.preventDefault();\n        if (inputValue.trim().length > 0) {\n\n            let todoList = [...notes];\n            let allNotes = { text: inputValue, check: false, id: Math.ceil(Math.random() * 10000) };\n            let i = todoList.length;\n            todoList[i] = allNotes;\n\n            localStorage.setItem('todo', JSON.stringify(todoList));\n            setNotes(todoList);\n            setInputValue('');\n        }\n    }\n\n    const onCheckChange = (id) => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        const index = todoList.findIndex(el => el.id == id);\n        todoList[index].check = !todoList[index].check;\n        localStorage.setItem('todo', JSON.stringify(todoList));\n        setNotes(todoList);\n    }\n\n    const onDelete = (id) => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        const index = todoList.findIndex(el => el.id == id);\n        todoList.splice(index, 1);\n        localStorage.setItem('todo', JSON.stringify(todoList));\n        setNotes(todoList);\n    }\n\n    const onDeleteAll = (e) => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        todoList = todoList.filter((el) => {\n            return el.check === false;\n        });\n        localStorage.setItem('todo', JSON.stringify(todoList));\n        setNotes(todoList);\n    }\n\n    const crossOutAllNotes = () => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        todoList.map((obj) => {\n            return obj.check = true;\n        });\n        localStorage.setItem('todo', JSON.stringify(todoList));\n        setNotes(todoList);\n    }\n\n\n\n    /*------------------------*/\n\n\n\n\n    const onAllNotes = () => {\n\n        setFilter('all');\n\n        /*let todoList = JSON.parse(localStorage.getItem('todo'));\n        setNotes(todoList);*/\n    }\n\n    const onActiveNotes = () => {\n\n        setFilter('active');\n\n        /* let todoList = JSON.parse(localStorage.getItem('todo'));\n         let activeNotes = todoList.filter((el) => {\n             return el.check === false;\n         });\n         setNotes(activeNotes); */\n\n    }\n\n    const onCompletedNotes = () => {\n\n        setFilter('completed');\n\n        /*  let todoList = JSON.parse(localStorage.getItem('todo'));\n          let completedNotes = todoList.filter((el) => {\n              return el.check === true;\n          });\n          setNotes(completedNotes); */\n    }\n    /*---------------------------------*/\n\n    return (\n        <div>\n            <form className=\"form-container\">\n                <div className=\"input-container\">\n                    <i className=\"fa fa-angle-down\" onClick={crossOutAllNotes}></i>\n                    <input className=\"input\" placeholder=\"What needs to be done?\" onChange={handleChange} value={inputValue} />\n                    <button className=\"button add-button\" onClick={addNote} type=\"submit\">add</button>\n                </div>\n                <div className=\"list-notes all-notes\">\n                    {notes && notes.map((item, i) => (\n                        <Note key={item.id} check={item.check} x={i} id={item.id} text={item.text} onChange={onCheckChange} onClick={onDelete} />\n                    ))}\n                </div>\n\n            </form>\n            <ButtonContainer all={onAllNotes} active={onActiveNotes} completed={onCompletedNotes} clearComplered={onDeleteAll} />\n        </div>\n    )\n}\n\nexport default Form;\n\n\n"]},"metadata":{},"sourceType":"module"}