{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/user/projects/todo-list-react/src/Notes.js\";\nimport React from 'react';\n\nfunction Notes(props) {\n  // function crossOut(event) {\n  //     console.log(123, props)\n  //     checked = !checked;\n  //     let todoList = JSON.parse(localStorage.getItem('todo'));\n  //     const index = todoList.findIndex(el => el.id === props.id);\n  //     todoList[index].check = !todoList[index].check;\n  //     localStorage.setItem('todo', JSON.stringify(todoList));\n  // }\n  // function classCrossOut(event) {\n  //     console.log(event.target)\n  //     event.target.classList.toggle('checked');\n  // }\n  const onCheckChange = () => {\n    console.log('id', props.id);\n  };\n\n  const onDelete = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.check,\n        onChange: onCheckChange,\n        id: `chk${props.x}`,\n        name: \"chkdemo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"check\",\n        id: props.id,\n        htmlFor: `chk${props.x}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text\",\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"button delete-button fa fa-times\",\n      \"aria-hidden\": \"true\",\n      onClick: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/home/user/projects/todo-list-react/src/Notes.js"],"names":["React","Notes","props","onCheckChange","console","log","id","onDelete","check","x","text"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAMC,aAAa,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBH,KAAK,CAACI,EAAxB;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAM,CAEtB,CAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,OAAO,EAAEL,KAAK,CAACM,KAFnB;AAE0B,QAAA,QAAQ,EAAEL,aAFpC;AAGI,QAAA,EAAE,EAAG,MAAKD,KAAK,CAACO,CAAE,EAHtB;AAGyB,QAAA,IAAI,EAAC;AAH9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,EAAE,EAAEP,KAAK,CAACI,EAAnC;AAAuC,QAAA,OAAO,EAAG,MAAKJ,KAAK,CAACO,CAAE;AAA9D;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAA,gBAAyBP,KAAK,CAACQ;AAA/B;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAG,MAAA,SAAS,EAAC,kCAAb;AAAgD,qBAAY,MAA5D;AAAmE,MAAA,OAAO,EAAEH;AAA5E;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;KAxCQN,K;AA0CT,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nfunction Notes(props) {\n\n\n    // function crossOut(event) {\n    //     console.log(123, props)\n    //     checked = !checked;\n    //     let todoList = JSON.parse(localStorage.getItem('todo'));\n    //     const index = todoList.findIndex(el => el.id === props.id);\n    //     todoList[index].check = !todoList[index].check;\n    //     localStorage.setItem('todo', JSON.stringify(todoList));\n    // }\n\n    // function classCrossOut(event) {\n    //     console.log(event.target)\n    //     event.target.classList.toggle('checked');\n    // }\n\n    const onCheckChange = () => {\n        console.log('id', props.id);\n    }\n\n    const onDelete = () => {\n\n    }\n\n\n    return (\n        <div className=\"notes-container\">\n            <span >\n                <input \n                    type=\"checkbox\"\n                    checked={props.check} onChange={onCheckChange}\n                    id={`chk${props.x}`} name=\"chkdemo\"></input>\n                <label className=\"check\" id={props.id} htmlFor={`chk${props.x}`}></label>\n            </span>\n\n            <label className=\"text\">{props.text}</label>\n            <i className=\"button delete-button fa fa-times\" aria-hidden=\"true\" onClick={onDelete} ></i>\n        </div>\n    );\n}\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}