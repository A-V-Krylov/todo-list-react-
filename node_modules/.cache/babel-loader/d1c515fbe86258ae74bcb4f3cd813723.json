{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/user/projects/todo-list-react/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Notes from './Notes.js';\n\nfunction Form() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const getTodos = () => {\n    try {\n      if (localStorage.getItem('todo')) {\n        setNotes(JSON.parse(localStorage.getItem('todo')));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n\n    if (inputValue.trim().length > 0) {\n      let todoList = [...notes];\n      let allNotes = {\n        text: inputValue,\n        check: false,\n        id: Math.ceil(Math.random() * 10000)\n      };\n      let i = todoList.length;\n      todoList[i] = allNotes;\n      localStorage.setItem('todo', JSON.stringify(todoList));\n      setNotes(todoList);\n      setInputValue('');\n    }\n  };\n\n  const onCheckChange = id => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    const index = todoList.findIndex(el => el.id == id);\n    todoList[index].check = !todoList[index].check;\n    localStorage.setItem('todo', JSON.stringify(todoList));\n    setNotes(todoList);\n  };\n\n  const onDelete = id => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    const index = todoList.findIndex(el => el.id == id);\n    todoList.splice(index, 1);\n    localStorage.setItem('todo', JSON.stringify(todoList));\n    setNotes(todoList);\n  };\n\n  const crossOutAllNotes = () => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    todoList.forEach(element => console.log(element.check = true));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-angle-down\",\n        onClick: crossOutAllNotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"What needs to be done?\",\n        onChange: handleChange,\n        value: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button add-button\",\n        onClick: addNote,\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-notes all-notes\",\n      children: notes && notes.map((item, i) => /*#__PURE__*/_jsxDEV(Notes, {\n        check: item.check,\n        x: i,\n        id: item.id,\n        text: item.text,\n        onChange: onCheckChange,\n        onClick: onDelete\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"button account-active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button all-button current\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button active-button\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button completed-button\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button clear-complered\",\n        children: \"Clear complered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"aFFJR4a9XQDEiPblQ2NTzexrhAw=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/user/projects/todo-list-react/src/Form.js"],"names":["React","useState","useEffect","Notes","Form","notes","setNotes","inputValue","setInputValue","getTodos","localStorage","getItem","JSON","parse","err","console","log","handleChange","event","target","value","addNote","preventDefault","trim","length","todoList","allNotes","text","check","id","Math","ceil","random","i","setItem","stringify","onCheckChange","index","findIndex","el","onDelete","splice","crossOutAllNotes","forEach","element","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Notes from './Notes.js'\n\n\nfunction Form() {\n    \n\n    const [notes, setNotes] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n\n\n    \n    const getTodos = () => {\n        try {\n            if (localStorage.getItem('todo')) {\n                setNotes(JSON.parse(localStorage.getItem('todo')));\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    \n    useEffect(() => {\n        getTodos();\n    }, []);\n\n    const handleChange = (event) => {\n        setInputValue(event.target.value);\n    }\n\n    const addNote = (event) => {\n        event.preventDefault();\n        if (inputValue.trim().length > 0) {\n\n            let todoList = [...notes];\n            let allNotes = {text:inputValue, check:false, id: Math.ceil(Math.random() * 10000)};\n            let i = todoList.length;\n            todoList[i] = allNotes;\n\n            localStorage.setItem('todo', JSON.stringify(todoList));\n            setNotes(todoList);\n            setInputValue('');\n        }\n    }\n\n    const onCheckChange = (id) => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        const index = todoList.findIndex(el => el.id == id);\n        todoList[index].check = !todoList[index].check;  \n        localStorage.setItem('todo', JSON.stringify(todoList));\n        setNotes(todoList);\n    }\n    \n    const onDelete = (id) => {    \n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        const index = todoList.findIndex(el => el.id == id);\n        todoList.splice(index, 1);\n        localStorage.setItem('todo', JSON.stringify(todoList));\n        setNotes(todoList);\n    }\n\n    const crossOutAllNotes = () => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        todoList.forEach(element => console.log(element.check = true));\n    }\n\n    return (\n        <form className=\"form-container\">\n            <div className=\"input-container\">\n                <i className=\"fa fa-angle-down\" onClick={crossOutAllNotes}></i>\n                <input className=\"input\" placeholder=\"What needs to be done?\" onChange={handleChange} value={inputValue} />\n                <button className=\"button add-button\" onClick={addNote} type=\"submit\">add</button>\n            </div>\n            <div className=\"list-notes all-notes\">\n                {notes && notes.map((item, i) => (\n                    <Notes key={item.id} check={item.check} x={i} id={item.id} text={item.text} onChange={onCheckChange}  onClick={onDelete}/>\n                ))}\n            </div>\n\n            <div className=\"button-container\">\n                <p className=\"button account-active\"></p>\n                <span>\n                    <button className='button all-button current'>All</button>\n                    <button className='button active-button'>Active</button>\n                    <button className='button completed-button'>Completed</button>\n                </span>\n                <button className='button clear-complered'>Clear complered</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form;\n\n\n"]},"metadata":{},"sourceType":"module"}