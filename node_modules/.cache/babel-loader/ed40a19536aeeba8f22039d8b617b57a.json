{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/user/projects/todo-list-react/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Note from './Note.js';\nimport ButtonContainer from './ButtonContainer.js';\n\nfunction Form() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const getTodos = () => {\n    try {\n      if (localStorage.getItem('todo')) {\n        console.log('132');\n        setNotes(JSON.parse(localStorage.getItem('todo')));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n\n    if (inputValue.trim().length > 0) {\n      let todoList = [...notes];\n      let allNotes = {\n        text: inputValue,\n        check: false,\n        id: Math.ceil(Math.random() * 10000)\n      };\n      let i = todoList.length;\n      todoList[i] = allNotes;\n      localStorage.setItem('todo', JSON.stringify(todoList));\n      setNotes(todoList);\n      setInputValue('');\n    }\n  };\n\n  const onCheckChange = id => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    const index = todoList.findIndex(el => el.id == id);\n    todoList[index].check = !todoList[index].check;\n    localStorage.setItem('todo', JSON.stringify(todoList));\n    setNotes(todoList);\n  };\n\n  const onDelete = id => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    const index = todoList.findIndex(el => el.id == id);\n    todoList.splice(index, 1);\n    localStorage.setItem('todo', JSON.stringify(todoList));\n    setNotes(todoList);\n  };\n\n  const onDeleteAll = e => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    todoList = todoList.filter(el => {\n      return el.check === false;\n    });\n    localStorage.setItem('todo', JSON.stringify(todoList));\n    setNotes(todoList);\n  };\n\n  const crossOutAllNotes = () => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    todoList.map(obj => {\n      return obj.check = true;\n    });\n    localStorage.setItem('todo', JSON.stringify(todoList));\n    setNotes(todoList);\n  };\n  /*------------------------*/\n\n\n  const onAllNotes = e => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    setNotes(todoList);\n  };\n\n  const onActiveNotes = e => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    let activeNotes = todoList.filter(el => {\n      return el.check === false;\n    });\n    setNotes(activeNotes);\n  };\n\n  const onCompletedNotes = e => {\n    let todoList = JSON.parse(localStorage.getItem('todo'));\n    let completedNotes = todoList.filter(el => {\n      return el.check === true;\n    });\n    setNotes(completedNotes);\n  };\n  /*---------------------------------*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-angle-down\",\n          onClick: crossOutAllNotes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          placeholder: \"What needs to be done?\",\n          onChange: handleChange,\n          value: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button add-button\",\n          onClick: addNote,\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-notes all-notes\",\n        children: notes && notes.map((item, i) => /*#__PURE__*/_jsxDEV(Note, {\n          check: item.check,\n          x: i,\n          id: item.id,\n          text: item.text,\n          onChange: onCheckChange,\n          onClick: onDelete\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      all: onAllNotes,\n      active: onActiveNotes,\n      completed: onCompletedNotes,\n      clearComplered: onDeleteAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"aFFJR4a9XQDEiPblQ2NTzexrhAw=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/user/projects/todo-list-react/src/Form.js"],"names":["React","useState","useEffect","Note","ButtonContainer","Form","notes","setNotes","inputValue","setInputValue","getTodos","localStorage","getItem","console","log","JSON","parse","err","handleChange","event","target","value","addNote","preventDefault","trim","length","todoList","allNotes","text","check","id","Math","ceil","random","i","setItem","stringify","onCheckChange","index","findIndex","el","onDelete","splice","onDeleteAll","e","filter","crossOutAllNotes","map","obj","onAllNotes","onActiveNotes","activeNotes","onCompletedNotes","completedNotes","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Note from './Note.js';\nimport ButtonContainer from './ButtonContainer.js'\n\n\n\nfunction Form() {\n\n\n    const [notes, setNotes] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n\n\n\n    const getTodos = () => {\n        try {\n            if (localStorage.getItem('todo')) {\n                console.log('132')\n                setNotes(JSON.parse(localStorage.getItem('todo')));\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        getTodos();\n    }, []);\n\n\n    const handleChange = (event) => {\n        setInputValue(event.target.value);\n    }\n\n    const addNote = (event) => {\n        event.preventDefault();\n        if (inputValue.trim().length > 0) {\n\n            let todoList = [...notes];\n            let allNotes = { text: inputValue, check: false, id: Math.ceil(Math.random() * 10000) };\n            let i = todoList.length;\n            todoList[i] = allNotes;\n\n            localStorage.setItem('todo', JSON.stringify(todoList));\n            setNotes(todoList);\n            setInputValue('');\n        }\n    }\n\n    const onCheckChange = (id) => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        const index = todoList.findIndex(el => el.id == id);\n        todoList[index].check = !todoList[index].check;\n        localStorage.setItem('todo', JSON.stringify(todoList));\n        setNotes(todoList);\n    }\n\n    const onDelete = (id) => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        const index = todoList.findIndex(el => el.id == id);\n        todoList.splice(index, 1);\n        localStorage.setItem('todo', JSON.stringify(todoList));\n        setNotes(todoList);\n    }\n\n    const onDeleteAll = (e) => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        todoList = todoList.filter((el) => {\n            return el.check === false;\n        });\n        localStorage.setItem('todo', JSON.stringify(todoList));\n        setNotes(todoList);\n    }\n\n    const crossOutAllNotes = () => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        todoList.map((obj) => {\n            return obj.check = true;\n        });\n        localStorage.setItem('todo', JSON.stringify(todoList));\n        setNotes(todoList);\n    }\n\n\n\n/*------------------------*/\n\n    const onAllNotes = (e) => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        setNotes(todoList);\n    }\n\n    const onActiveNotes = (e) => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        let activeNotes = todoList.filter((el) => {\n            return el.check === false;\n        });\n        setNotes(activeNotes); \n\n    }\n\n    const onCompletedNotes = (e) => {\n        let todoList = JSON.parse(localStorage.getItem('todo'));\n        let completedNotes = todoList.filter((el) => {\n            return el.check === true;\n        });\n        setNotes(completedNotes); \n    }\n/*---------------------------------*/\n\n    return (\n        <div>\n            <form className=\"form-container\">\n                <div className=\"input-container\">\n                    <i className=\"fa fa-angle-down\" onClick={crossOutAllNotes}></i>\n                    <input className=\"input\" placeholder=\"What needs to be done?\" onChange={handleChange} value={inputValue} />\n                    <button className=\"button add-button\" onClick={addNote} type=\"submit\">add</button>\n                </div>\n                <div className=\"list-notes all-notes\">\n                    {notes && notes.map((item, i) => (\n                        <Note key={item.id} check={item.check} x={i} id={item.id} text={item.text} onChange={onCheckChange} onClick={onDelete} />\n                    ))}\n                </div>\n\n            </form>\n            <ButtonContainer all={onAllNotes} active={onActiveNotes} completed={onCompletedNotes} clearComplered={onDeleteAll} />\n        </div>\n    )\n}\n\nexport default Form;\n\n\n"]},"metadata":{},"sourceType":"module"}